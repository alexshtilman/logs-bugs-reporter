version: "3.4"
services:
  # provides configuration for all services by service-name
  config-server:
    build: logs-configuration-server
    ports:
      - 8282:8282
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8282/karafka/dev"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - back
  discovery-server:
    build: logs-discovery-server
    ports:
      - 8761:8761    
    networks:
      - back
      - front
  # provides email if email not found from artifact     
  assigner-email-provider:
    build: logs-bugs-assigner-mail-provider
    ports:
      - 9292:9292
    networks:
      - back
    environment:
      - DEFAUL_ASSIGER_EMAIL=${DEFAUL_ASSIGER_EMAIL}
  # sorts logs from default topick to logs-validated and exceptions
  logs-analyzer:
    build: logs-analyzer
    entrypoint: ./docker-entrypoint.sh ${CONFIG_SERVER_IP} ${CONFIG_SERVER_PORT} java -jar app.jar
    environment:
      - CONFIG_SERVER_IP=${CONFIG_SERVER_IP}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - CONFIG_SERVER_PROFILE=${CONFIG_SERVER_PROFILE}
      
      - PROFILE_KARAFKA=${PROFILE_KARAFKA}
      
      - KAFKA_TOPIC_DEFAULT=${KAFKA_TOPIC_DEFAULT}
      - KAFKA_ANALYZER_GROUP=${KAFKA_ANALYZER_GROUP}
      - KAFKA_TOPIC_VALIDATED=${KAFKA_TOPIC_VALIDATED}
      - KAFKA_TOPIC_EXCEPTIONS=${KAFKA_TOPIC_EXCEPTIONS}
    networks:
      - back
      - front
    depends_on:
      - config-server

  # backoffice         
  reporter-back-office:
    build: logs-bugs-reporter-back-office
    entrypoint: ./docker-entrypoint.sh ${CONFIG_SERVER_IP} ${CONFIG_SERVER_PORT} java -jar app.jar
    ports:
      - 8080:8080
    environment:
      - CONFIG_SERVER_IP=${CONFIG_SERVER_IP}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - PROFILE_PG=${PROFILE_PG}
      - CONFIG_SERVER_PROFILE=${CONFIG_SERVER_PROFILE}
    networks:
      - back
      - front
    depends_on:
      - config-server
      
  # info-backoffice         
  info-back-office:
    build: logs-info-back-office
    entrypoint: ./docker-entrypoint.sh ${CONFIG_SERVER_IP} ${CONFIG_SERVER_PORT} java -jar app.jar
    ports:
      - 8081:8081
    environment:
      - CONFIG_SERVER_IP=${CONFIG_SERVER_IP}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - PROFILE_MONGO=${PROFILE_MONGO}
      - CONFIG_SERVER_PROFILE=${CONFIG_SERVER_PROFILE}
    depends_on:
      - config-server   
    networks:
      - back
      - front

  # shuold not have access to front...
  email-provider:
    build: logs-bugs-email-provider
    entrypoint: ./docker-entrypoint.sh ${CONFIG_SERVER_IP} ${CONFIG_SERVER_PORT} java -jar app.jar
    ports:
      - 9393:9393
    depends_on:
      - config-server
    networks:
      - back
      - front   
    environment:
      - CONFIG_SERVER_IP=${CONFIG_SERVER_IP}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - PROFILE_PG=${PROFILE_PG}
      - CONFIG_SERVER_PROFILE=${CONFIG_SERVER_PROFILE}   
  # get log from exceptions topic and send it to programmer  
  email-notifier:
    build: logs-bugs-email-notifier
    entrypoint: ./docker-entrypoint.sh ${CONFIG_SERVER_IP} ${CONFIG_SERVER_PORT} java -jar app.jar
    depends_on:
      - config-server
    environment:
     
      - CONFIG_SERVER_IP=${CONFIG_SERVER_IP}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - CONFIG_SERVER_PROFILE=${CONFIG_SERVER_PROFILE}
      
      - PROFILE_GMAIL=${PROFILE_GMAIL}
      - PROFILE_KARAFKA=${PROFILE_KARAFKA}
      - KAFKA_TOPIC_EXCEPTIONS=${KAFKA_TOPIC_EXCEPTIONS}
      - KAFKA_EMAIL_NOTIFIIER_GROUP=${KAFKA_EMAIL_NOTIFIIER_GROUP}
    networks:
      - back
      - front
  # get dto from topic exceptions and save it to DB     
  opening:
    build: logs-bugs-opening
    entrypoint: ./docker-entrypoint.sh ${CONFIG_SERVER_IP} ${CONFIG_SERVER_PORT}  java -jar app.jar
    environment:
      - CONFIG_SERVER_IP=${CONFIG_SERVER_IP}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - CONFIG_SERVER_PROFILE=${CONFIG_SERVER_PROFILE}
      
      - PROFILE_PG=${PROFILE_PG}
      - PROFILE_KARAFKA=${PROFILE_KARAFKA}    
      
      - KAFKA_TOPIC_EXCEPTIONS=${KAFKA_TOPIC_EXCEPTIONS}
      - KAFKA_OPENING_GROUP=${KAFKA_OPENING_GROUP}
    networks:
      - back
      - front 
    depends_on:
      - config-server
  populator:
    build: logs-db-populator
    entrypoint: ./docker-entrypoint.sh ${CONFIG_SERVER_IP} ${CONFIG_SERVER_PORT}  java -jar app.jar
    environment:
      - CONFIG_SERVER_IP=${CONFIG_SERVER_IP}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - CONFIG_SERVER_PROFILE=${CONFIG_SERVER_PROFILE}
      
      - PROFILE_MONGO=${PROFILE_MONGO}
      - PROFILE_KARAFKA=${PROFILE_KARAFKA}    
      
      - KAFKA_TOPIC_VALIDATED=${KAFKA_TOPIC_VALIDATED}
      - KAFKA_POPULATOR_GROUP=${KAFKA_POPULATOR_GROUP}  
    depends_on:
      - config-server  
    networks:
      - back    
      - front
    
networks:
    front:
    back:
      internal: true
